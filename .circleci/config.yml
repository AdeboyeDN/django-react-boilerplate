# This circle.yml file does some basic testing on CI for the boilerplate itself.
# When using the boilerplate this file will not be used, proj_circle.yml is used
# instead.
version: 2

jobs:
  checkout_code:
    working_directory: ~/django-react-boilerplate
    docker:
      - image: circleci/python:3.6-stretch-node-browsers
    steps:
      - checkout
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python3.6/site-packages
      - run: pip install django
      - run: django-admin startproject testproject --extension py,yml,json,example --name Procfile,README.md --template=.
      - save_cache:
          key: repo-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/django-react-boilerplate
  build_dependencies_backend:
    working_directory: ~/django-react-boilerplate
    docker:
      - image: circleci/python:3.6-stretch-node-browsers
        environment:
          PIPENV_IGNORE_VIRTUALENVS: True
          PIPENV_VENV_IN_PROJECT: True
          PIPENV_DONT_LOAD_ENV: 0
    steps:
      - restore_cache:
          key: repo-{{ .Environment.CIRCLE_SHA1 }}
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python3.6/site-packages
      - run:
          command: pip install requests pipenv --upgrade
          path: testproject
      - run:
          command: pipenv lock --dev
          path: testproject
      - restore_cache:
          keys:
            - pipenv-cache-{{ .Branch }}-{{ checksum "testproject/Pipfile.lock" }}
      - run:
          command: pipenv install --dev
          path: testproject
      - save_cache:
          key: pipenv-cache-{{ .Branch }}-{{ checksum "testproject/Pipfile.lock" }}
          paths:
            - testproject/.venv
            - /usr/local/bin
            - /usr/local/lib/python3.6/site-packages
  run_tests_and_lint_backend:
    working_directory: ~/django-react-boilerplate
    docker:
      - image: circleci/python:3.6-stretch-node-browsers
        environment:
          PIPENV_IGNORE_VIRTUALENVS: True
          PIPENV_VENV_IN_PROJECT: True
          PIPENV_DONT_LOAD_ENV: 0
    steps:
      - restore_cache:
          key: repo-{{ .Environment.CIRCLE_SHA1 }}
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python3.6/site-packages
      - run:
          command: pipenv lock --dev
          path: testproject
      - restore_cache:
          keys:
            - pipenv-cache-{{ .Branch }}-{{ checksum "testproject/Pipfile.lock" }}
      - run:
          command: cp testproject/settings/local.py.example testproject/settings/local.py
          path: testproject
      - run:
          command: cp .env.example .env
          path: testproject
      - run:
          command: pipenv run python manage.py makemigrations
          path: testproject
      - run:
          command: pipenv run python manage.py migrate
          path: testproject
      - run:
          command: pipenv run python manage.py test
          path: testproject
      - run:
          command: pipenv run prospector
          path: testproject
      - run:
          command: pipenv run python manage.py has_missing_migrations
          path: testproject
      - run:
          command: pipenv run python manage.py check --deploy --fail-level WARNING
          path: testproject
          environment:
            SECRET_KEY: '$(python -c "import uuid; print(uuid.uuid4().hex + uuid.uuid4().hex)")'
            SENDGRID_USERNAME: foo
            SENDGRID_PASSWORD: password
            DJANGO_SETTINGS_MODULE: 'testproject.settings.production'
            DATABASE_URL: 'sqlite:///'
            ALLOWED_HOSTS: '.example.org'
            REDIS_URL: 'redis://'
  build_dependencies_frontend:
    working_directory: ~/django-react-boilerplate
    docker:
      - image: circleci/python:3.6-stretch-node-browsers
    steps:
      - restore_cache:
          key: repo-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          command: npm install --package-lock-only
          path: testproject
      - restore_cache:
          keys:
            - npm-cache-{{ .Branch }}-{{ checksum "testproject/package-lock.json" }}
      - run:
          name: "hotfix for #133"
          command: |
            sed -i 's/"bootstrap-loader": "^2.1.0"/"bootstrap-loader": "2.1.0"/g' package.json
          path: testproject
      - run:
          command: npm install --no-optional --no-save
          path: testproject
      - run:
          command: npm dedupe
          path: testproject
      # npm ls will error on dependencies errors
      - run:
          command: npm ls
          path: testproject
      - save_cache:
          key: npm-cache-{{ .Branch }}-{{ checksum "testproject/package-lock.json" }}
          paths:
            - testproject/node_modules
  run_tests_and_lint_frontend:
    working_directory: ~/django-react-boilerplate
    docker:
      - image: circleci/python:3.6-stretch-node-browsers
    steps:
      - restore_cache:
          key: repo-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          command: npm install --package-lock-only
          path: testproject
      - restore_cache:
          keys:
            - npm-cache-{{ .Branch }}-{{ checksum "testproject/package-lock.json" }}
      - run:
          command: npm run test
          path: testproject
      - run:
          command: npm run lint
          path: testproject
      - run:
          command: npm run build
          path: testproject
  deploy:
    working_directory: ~/django-react-boilerplate
    docker:
      - image: circleci/python:3.6-stretch-node-browsers
        environment:
          PIPENV_IGNORE_VIRTUALENVS: True
          PIPENV_VENV_IN_PROJECT: True
          PIPENV_DONT_LOAD_ENV: 0
    steps:
      - checkout
      - run:
          command: mv proj_circle.yml .circleci/config.yml
      - run:
          command: git checkout -b boilerplate-release
      - run:
          command: git add .circleci/config.yml
      - run:
          command: git rm proj_circle.yml
      - run:
          command: git commit -m "Replacing circle.yml" --author "Vinta Software <contact@vinta.com.br>"
          environment:
            GIT_COMMITTER_NAME: "Vinta Software"
            GIT_COMMITTER_EMAIL: "contact@vinta.com.br"
      - run:
          command: git push origin boilerplate-release --force

workflows:
  version: 2
  checkout_build_test_and_lint:
    jobs:
      - checkout_code
      - build_dependencies_backend:
          requires:
            - checkout_code
      - build_dependencies_frontend:
          requires:
            - checkout_code
      - run_tests_and_lint_backend:
          requires:
            - build_dependencies_backend
      - run_tests_and_lint_frontend:
          requires:
            - build_dependencies_frontend
  checkout_build_test_lint_and_deploy:
    jobs:
      - checkout_code:
          filters:
            branches:
              only: master
      - build_dependencies_backend:
          requires:
            - checkout_code
      - build_dependencies_frontend:
          requires:
            - checkout_code
      - run_tests_and_lint_backend:
          requires:
            - build_dependencies_backend
      - run_tests_and_lint_frontend:
          requires:
            - build_dependencies_frontend
      - deploy:
          requires:
            - run_tests_and_lint_backend
            - run_tests_and_lint_frontend
